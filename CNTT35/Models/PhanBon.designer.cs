#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CNTT35.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_PHANBON")]
	public partial class PhanBonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTDONHANG(CTDONHANG instance);
    partial void UpdateCTDONHANG(CTDONHANG instance);
    partial void DeleteCTDONHANG(CTDONHANG instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertMUCGIAOTIEP(MUCGIAOTIEP instance);
    partial void UpdateMUCGIAOTIEP(MUCGIAOTIEP instance);
    partial void DeleteMUCGIAOTIEP(MUCGIAOTIEP instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertQLVANCHUYEN(QLVANCHUYEN instance);
    partial void UpdateQLVANCHUYEN(QLVANCHUYEN instance);
    partial void DeleteQLVANCHUYEN(QLVANCHUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHANHTOAN(THANHTOAN instance);
    partial void UpdateTHANHTOAN(THANHTOAN instance);
    partial void DeleteTHANHTOAN(THANHTOAN instance);
    #endregion
		
		public PhanBonDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_PHANBONConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PhanBonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhanBonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhanBonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhanBonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this.GetTable<CTDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<MUCGIAOTIEP> MUCGIAOTIEPs
		{
			get
			{
				return this.GetTable<MUCGIAOTIEP>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<QLVANCHUYEN> QLVANCHUYENs
		{
			get
			{
				return this.GetTable<QLVANCHUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THANHTOAN> THANHTOANs
		{
			get
			{
				return this.GetTable<THANHTOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDONHANG")]
	public partial class CTDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCTDH;
		
		private System.Nullable<int> _IDDH;
		
		private System.Nullable<int> _IDSP;
		
		private System.Nullable<int> _SOLUONGSP;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCTDHChanging(int value);
    partial void OnIDCTDHChanged();
    partial void OnIDDHChanging(System.Nullable<int> value);
    partial void OnIDDHChanged();
    partial void OnIDSPChanging(System.Nullable<int> value);
    partial void OnIDSPChanged();
    partial void OnSOLUONGSPChanging(System.Nullable<int> value);
    partial void OnSOLUONGSPChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CTDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCTDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCTDH
		{
			get
			{
				return this._IDCTDH;
			}
			set
			{
				if ((this._IDCTDH != value))
				{
					this.OnIDCTDHChanging(value);
					this.SendPropertyChanging();
					this._IDCTDH = value;
					this.SendPropertyChanged("IDCTDH");
					this.OnIDCTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDH", DbType="Int")]
		public System.Nullable<int> IDDH
		{
			get
			{
				return this._IDDH;
			}
			set
			{
				if ((this._IDDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDHChanging(value);
					this.SendPropertyChanging();
					this._IDDH = value;
					this.SendPropertyChanged("IDDH");
					this.OnIDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="Int")]
		public System.Nullable<int> IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGSP", DbType="Int")]
		public System.Nullable<int> SOLUONGSP
		{
			get
			{
				return this._SOLUONGSP;
			}
			set
			{
				if ((this._SOLUONGSP != value))
				{
					this.OnSOLUONGSPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGSP = value;
					this.SendPropertyChanged("SOLUONGSP");
					this.OnSOLUONGSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Money")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CTDONHANG", Storage="_DONHANG", ThisKey="IDDH", OtherKey="IDDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CTDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CTDONHANGs.Add(this);
						this._IDDH = value.IDDH;
					}
					else
					{
						this._IDDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONHANG", Storage="_SANPHAM", ThisKey="IDSP", OtherKey="IDSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTDONHANGs.Add(this);
						this._IDSP = value.IDSP;
					}
					else
					{
						this._IDSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDM;
		
		private string _TENDM;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDMChanging(int value);
    partial void OnIDDMChanged();
    partial void OnTENDMChanging(string value);
    partial void OnTENDMChanged();
    #endregion
		
		public DANHMUC()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDM
		{
			get
			{
				return this._IDDM;
			}
			set
			{
				if ((this._IDDM != value))
				{
					this.OnIDDMChanging(value);
					this.SendPropertyChanging();
					this._IDDM = value;
					this.SendPropertyChanged("IDDM");
					this.OnIDDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDM", DbType="NVarChar(50)")]
		public string TENDM
		{
			get
			{
				return this._TENDM;
			}
			set
			{
				if ((this._TENDM != value))
				{
					this.OnTENDMChanging(value);
					this.SendPropertyChanging();
					this._TENDM = value;
					this.SendPropertyChanged("TENDM");
					this.OnTENDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_SANPHAMs", ThisKey="IDDM", OtherKey="IDDM")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDH;
		
		private System.Nullable<int> _IDKM;
		
		private System.Nullable<int> _IDND;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private EntitySet<CTDONHANG> _CTDONHANGs;
		
		private EntitySet<QLVANCHUYEN> _QLVANCHUYENs;
		
		private EntitySet<THANHTOAN> _THANHTOANs;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDHChanging(int value);
    partial void OnIDDHChanged();
    partial void OnIDKMChanging(System.Nullable<int> value);
    partial void OnIDKMChanged();
    partial void OnIDNDChanging(System.Nullable<int> value);
    partial void OnIDNDChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    #endregion
		
		public DONHANG()
		{
			this._CTDONHANGs = new EntitySet<CTDONHANG>(new Action<CTDONHANG>(this.attach_CTDONHANGs), new Action<CTDONHANG>(this.detach_CTDONHANGs));
			this._QLVANCHUYENs = new EntitySet<QLVANCHUYEN>(new Action<QLVANCHUYEN>(this.attach_QLVANCHUYENs), new Action<QLVANCHUYEN>(this.detach_QLVANCHUYENs));
			this._THANHTOANs = new EntitySet<THANHTOAN>(new Action<THANHTOAN>(this.attach_THANHTOANs), new Action<THANHTOAN>(this.detach_THANHTOANs));
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDH
		{
			get
			{
				return this._IDDH;
			}
			set
			{
				if ((this._IDDH != value))
				{
					this.OnIDDHChanging(value);
					this.SendPropertyChanging();
					this._IDDH = value;
					this.SendPropertyChanged("IDDH");
					this.OnIDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKM", DbType="Int")]
		public System.Nullable<int> IDKM
		{
			get
			{
				return this._IDKM;
			}
			set
			{
				if ((this._IDKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKMChanging(value);
					this.SendPropertyChanging();
					this._IDKM = value;
					this.SendPropertyChanged("IDKM");
					this.OnIDKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDND", DbType="Int")]
		public System.Nullable<int> IDND
		{
			get
			{
				return this._IDND;
			}
			set
			{
				if ((this._IDND != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNDChanging(value);
					this.SendPropertyChanging();
					this._IDND = value;
					this.SendPropertyChanged("IDND");
					this.OnIDNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CTDONHANG", Storage="_CTDONHANGs", ThisKey="IDDH", OtherKey="IDDH")]
		public EntitySet<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this._CTDONHANGs;
			}
			set
			{
				this._CTDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_QLVANCHUYEN", Storage="_QLVANCHUYENs", ThisKey="IDDH", OtherKey="IDDH")]
		public EntitySet<QLVANCHUYEN> QLVANCHUYENs
		{
			get
			{
				return this._QLVANCHUYENs;
			}
			set
			{
				this._QLVANCHUYENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_THANHTOAN", Storage="_THANHTOANs", ThisKey="IDDH", OtherKey="IDDH")]
		public EntitySet<THANHTOAN> THANHTOANs
		{
			get
			{
				return this._THANHTOANs;
			}
			set
			{
				this._THANHTOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_DONHANG", Storage="_KHUYENMAI", ThisKey="IDKM", OtherKey="IDKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._IDKM = value.IDKM;
					}
					else
					{
						this._IDKM = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_DONHANG", Storage="_NGUOIDUNG", ThisKey="IDND", OtherKey="IDND", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._IDND = value.IDND;
					}
					else
					{
						this._IDND = default(Nullable<int>);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
		
		private void attach_QLVANCHUYENs(QLVANCHUYEN entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_QLVANCHUYENs(QLVANCHUYEN entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
		
		private void attach_THANHTOANs(THANHTOAN entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_THANHTOANs(THANHTOAN entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDND;
		
		private string _HOTEN;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NGAYDK;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNDChanging(int value);
    partial void OnIDNDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNGAYDKChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDKChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDND", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDND
		{
			get
			{
				return this._IDND;
			}
			set
			{
				if ((this._IDND != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNDChanging(value);
					this.SendPropertyChanging();
					this._IDND = value;
					this.SendPropertyChanged("IDND");
					this.OnIDNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDK", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDK
		{
			get
			{
				return this._NGAYDK;
			}
			set
			{
				if ((this._NGAYDK != value))
				{
					this.OnNGAYDKChanging(value);
					this.SendPropertyChanging();
					this._NGAYDK = value;
					this.SendPropertyChanged("NGAYDK");
					this.OnNGAYDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_KHACHHANG", Storage="_NGUOIDUNG", ThisKey="IDND", OtherKey="IDND", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.KHACHHANG = null;
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.KHACHHANG = this;
						this._IDND = value.IDND;
					}
					else
					{
						this._IDND = default(int);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUCGIAOTIEP")]
	public partial class MUCGIAOTIEP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDANHMUC;
		
		private System.Nullable<int> _IDND;
		
		private System.Nullable<int> _IDTINNHAN;
		
		private string _NOIDUNG;
		
		private System.Nullable<System.DateTime> _NGAYGUI;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDANHMUCChanging(int value);
    partial void OnIDDANHMUCChanged();
    partial void OnIDNDChanging(System.Nullable<int> value);
    partial void OnIDNDChanged();
    partial void OnIDTINNHANChanging(System.Nullable<int> value);
    partial void OnIDTINNHANChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnNGAYGUIChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGUIChanged();
    #endregion
		
		public MUCGIAOTIEP()
		{
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDANHMUC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDANHMUC
		{
			get
			{
				return this._IDDANHMUC;
			}
			set
			{
				if ((this._IDDANHMUC != value))
				{
					this.OnIDDANHMUCChanging(value);
					this.SendPropertyChanging();
					this._IDDANHMUC = value;
					this.SendPropertyChanged("IDDANHMUC");
					this.OnIDDANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDND", DbType="Int")]
		public System.Nullable<int> IDND
		{
			get
			{
				return this._IDND;
			}
			set
			{
				if ((this._IDND != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNDChanging(value);
					this.SendPropertyChanging();
					this._IDND = value;
					this.SendPropertyChanged("IDND");
					this.OnIDNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTINNHAN", DbType="Int")]
		public System.Nullable<int> IDTINNHAN
		{
			get
			{
				return this._IDTINNHAN;
			}
			set
			{
				if ((this._IDTINNHAN != value))
				{
					this.OnIDTINNHANChanging(value);
					this.SendPropertyChanging();
					this._IDTINNHAN = value;
					this.SendPropertyChanged("IDTINNHAN");
					this.OnIDTINNHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(200)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGUI", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYGUI
		{
			get
			{
				return this._NGAYGUI;
			}
			set
			{
				if ((this._NGAYGUI != value))
				{
					this.OnNGAYGUIChanging(value);
					this.SendPropertyChanging();
					this._NGAYGUI = value;
					this.SendPropertyChanged("NGAYGUI");
					this.OnNGAYGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_MUCGIAOTIEP", Storage="_NGUOIDUNG", ThisKey="IDND", OtherKey="IDND", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.MUCGIAOTIEPs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.MUCGIAOTIEPs.Add(this);
						this._IDND = value.IDND;
					}
					else
					{
						this._IDND = default(Nullable<int>);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKM;
		
		private string _MAKHUYENMAI;
		
		private string _CHITIET;
		
		private System.Nullable<int> _SOLUONGKM;
		
		private System.Nullable<decimal> _GIATIENKM;
		
		private System.Nullable<System.DateTime> _NGAYBD;
		
		private System.Nullable<System.DateTime> _NGAYKT;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKMChanging(int value);
    partial void OnIDKMChanged();
    partial void OnMAKHUYENMAIChanging(string value);
    partial void OnMAKHUYENMAIChanged();
    partial void OnCHITIETChanging(string value);
    partial void OnCHITIETChanged();
    partial void OnSOLUONGKMChanging(System.Nullable<int> value);
    partial void OnSOLUONGKMChanged();
    partial void OnGIATIENKMChanging(System.Nullable<decimal> value);
    partial void OnGIATIENKMChanged();
    partial void OnNGAYBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKTChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKM
		{
			get
			{
				return this._IDKM;
			}
			set
			{
				if ((this._IDKM != value))
				{
					this.OnIDKMChanging(value);
					this.SendPropertyChanging();
					this._IDKM = value;
					this.SendPropertyChanged("IDKM");
					this.OnIDKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHUYENMAI", DbType="NVarChar(30)")]
		public string MAKHUYENMAI
		{
			get
			{
				return this._MAKHUYENMAI;
			}
			set
			{
				if ((this._MAKHUYENMAI != value))
				{
					this.OnMAKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._MAKHUYENMAI = value;
					this.SendPropertyChanged("MAKHUYENMAI");
					this.OnMAKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHITIET", DbType="NVarChar(200)")]
		public string CHITIET
		{
			get
			{
				return this._CHITIET;
			}
			set
			{
				if ((this._CHITIET != value))
				{
					this.OnCHITIETChanging(value);
					this.SendPropertyChanging();
					this._CHITIET = value;
					this.SendPropertyChanged("CHITIET");
					this.OnCHITIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGKM", DbType="Int")]
		public System.Nullable<int> SOLUONGKM
		{
			get
			{
				return this._SOLUONGKM;
			}
			set
			{
				if ((this._SOLUONGKM != value))
				{
					this.OnSOLUONGKMChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGKM = value;
					this.SendPropertyChanged("SOLUONGKM");
					this.OnSOLUONGKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATIENKM", DbType="Money")]
		public System.Nullable<decimal> GIATIENKM
		{
			get
			{
				return this._GIATIENKM;
			}
			set
			{
				if ((this._GIATIENKM != value))
				{
					this.OnGIATIENKMChanging(value);
					this.SendPropertyChanging();
					this._GIATIENKM = value;
					this.SendPropertyChanged("GIATIENKM");
					this.OnGIATIENKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_DONHANG", Storage="_DONHANGs", ThisKey="IDKM", OtherKey="IDKM")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDND;
		
		private string _TENND;
		
		private string _MATKHAU;
		
		private System.Nullable<int> _PHANQUYEN;
		
		private string _EMAIL;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntitySet<MUCGIAOTIEP> _MUCGIAOTIEPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNDChanging(int value);
    partial void OnIDNDChanged();
    partial void OnTENNDChanging(string value);
    partial void OnTENNDChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnPHANQUYENChanging(System.Nullable<int> value);
    partial void OnPHANQUYENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._MUCGIAOTIEPs = new EntitySet<MUCGIAOTIEP>(new Action<MUCGIAOTIEP>(this.attach_MUCGIAOTIEPs), new Action<MUCGIAOTIEP>(this.detach_MUCGIAOTIEPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDND", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDND
		{
			get
			{
				return this._IDND;
			}
			set
			{
				if ((this._IDND != value))
				{
					this.OnIDNDChanging(value);
					this.SendPropertyChanging();
					this._IDND = value;
					this.SendPropertyChanged("IDND");
					this.OnIDNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENND", DbType="VarChar(50)")]
		public string TENND
		{
			get
			{
				return this._TENND;
			}
			set
			{
				if ((this._TENND != value))
				{
					this.OnTENNDChanging(value);
					this.SendPropertyChanging();
					this._TENND = value;
					this.SendPropertyChanged("TENND");
					this.OnTENNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANQUYEN", DbType="Int")]
		public System.Nullable<int> PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN;
			}
			set
			{
				if ((this._PHANQUYEN != value))
				{
					this.OnPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._PHANQUYEN = value;
					this.SendPropertyChanged("PHANQUYEN");
					this.OnPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_DONHANG", Storage="_DONHANGs", ThisKey="IDND", OtherKey="IDND")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_KHACHHANG", Storage="_KHACHHANG", ThisKey="IDND", OtherKey="IDND", IsUnique=true, IsForeignKey=false)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.NGUOIDUNG = null;
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNG = this;
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_MUCGIAOTIEP", Storage="_MUCGIAOTIEPs", ThisKey="IDND", OtherKey="IDND")]
		public EntitySet<MUCGIAOTIEP> MUCGIAOTIEPs
		{
			get
			{
				return this._MUCGIAOTIEPs;
			}
			set
			{
				this._MUCGIAOTIEPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_MUCGIAOTIEPs(MUCGIAOTIEP entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_MUCGIAOTIEPs(MUCGIAOTIEP entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNCC;
		
		private string _TENNCC;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNCCChanging(int value);
    partial void OnIDNCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNCC
		{
			get
			{
				return this._IDNCC;
			}
			set
			{
				if ((this._IDNCC != value))
				{
					this.OnIDNCCChanging(value);
					this.SendPropertyChanging();
					this._IDNCC = value;
					this.SendPropertyChanged("IDNCC");
					this.OnIDNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(100)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_SANPHAMs", ThisKey="IDNCC", OtherKey="IDNCC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QLVANCHUYEN")]
	public partial class QLVANCHUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVANCHUYEN;
		
		private System.Nullable<int> _IDDH;
		
		private System.Nullable<System.DateTime> _NGAYVANCHUYEN;
		
		private System.Nullable<System.DateTime> _NGAYGIAOHANG;
		
		private System.Nullable<decimal> _PHIVANCHUYEN;
		
		private string _LOAIVANCHUYEN;
		
		private EntityRef<DONHANG> _DONHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVANCHUYENChanging(int value);
    partial void OnIDVANCHUYENChanged();
    partial void OnIDDHChanging(System.Nullable<int> value);
    partial void OnIDDHChanged();
    partial void OnNGAYVANCHUYENChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYVANCHUYENChanged();
    partial void OnNGAYGIAOHANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOHANGChanged();
    partial void OnPHIVANCHUYENChanging(System.Nullable<decimal> value);
    partial void OnPHIVANCHUYENChanged();
    partial void OnLOAIVANCHUYENChanging(string value);
    partial void OnLOAIVANCHUYENChanged();
    #endregion
		
		public QLVANCHUYEN()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVANCHUYEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDVANCHUYEN
		{
			get
			{
				return this._IDVANCHUYEN;
			}
			set
			{
				if ((this._IDVANCHUYEN != value))
				{
					this.OnIDVANCHUYENChanging(value);
					this.SendPropertyChanging();
					this._IDVANCHUYEN = value;
					this.SendPropertyChanged("IDVANCHUYEN");
					this.OnIDVANCHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDH", DbType="Int")]
		public System.Nullable<int> IDDH
		{
			get
			{
				return this._IDDH;
			}
			set
			{
				if ((this._IDDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDHChanging(value);
					this.SendPropertyChanging();
					this._IDDH = value;
					this.SendPropertyChanged("IDDH");
					this.OnIDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYVANCHUYEN", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYVANCHUYEN
		{
			get
			{
				return this._NGAYVANCHUYEN;
			}
			set
			{
				if ((this._NGAYVANCHUYEN != value))
				{
					this.OnNGAYVANCHUYENChanging(value);
					this.SendPropertyChanging();
					this._NGAYVANCHUYEN = value;
					this.SendPropertyChanged("NGAYVANCHUYEN");
					this.OnNGAYVANCHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAOHANG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYGIAOHANG
		{
			get
			{
				return this._NGAYGIAOHANG;
			}
			set
			{
				if ((this._NGAYGIAOHANG != value))
				{
					this.OnNGAYGIAOHANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAOHANG = value;
					this.SendPropertyChanged("NGAYGIAOHANG");
					this.OnNGAYGIAOHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHIVANCHUYEN", DbType="Money")]
		public System.Nullable<decimal> PHIVANCHUYEN
		{
			get
			{
				return this._PHIVANCHUYEN;
			}
			set
			{
				if ((this._PHIVANCHUYEN != value))
				{
					this.OnPHIVANCHUYENChanging(value);
					this.SendPropertyChanging();
					this._PHIVANCHUYEN = value;
					this.SendPropertyChanged("PHIVANCHUYEN");
					this.OnPHIVANCHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIVANCHUYEN", DbType="NVarChar(50)")]
		public string LOAIVANCHUYEN
		{
			get
			{
				return this._LOAIVANCHUYEN;
			}
			set
			{
				if ((this._LOAIVANCHUYEN != value))
				{
					this.OnLOAIVANCHUYENChanging(value);
					this.SendPropertyChanging();
					this._LOAIVANCHUYEN = value;
					this.SendPropertyChanged("LOAIVANCHUYEN");
					this.OnLOAIVANCHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_QLVANCHUYEN", Storage="_DONHANG", ThisKey="IDDH", OtherKey="IDDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.QLVANCHUYENs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.QLVANCHUYENs.Add(this);
						this._IDDH = value.IDDH;
					}
					else
					{
						this._IDDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSP;
		
		private System.Nullable<int> _IDDM;
		
		private System.Nullable<int> _IDNCC;
		
		private string _TENSP;
		
		private System.Nullable<decimal> _DONGIA;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private string _HINHANH;
		
		private string _MOTA;
		
		private EntitySet<CTDONHANG> _CTDONHANGs;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSPChanging(int value);
    partial void OnIDSPChanged();
    partial void OnIDDMChanging(System.Nullable<int> value);
    partial void OnIDDMChanged();
    partial void OnIDNCCChanging(System.Nullable<int> value);
    partial void OnIDNCCChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CTDONHANGs = new EntitySet<CTDONHANG>(new Action<CTDONHANG>(this.attach_CTDONHANGs), new Action<CTDONHANG>(this.detach_CTDONHANGs));
			this._DANHMUC = default(EntityRef<DANHMUC>);
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDM", DbType="Int")]
		public System.Nullable<int> IDDM
		{
			get
			{
				return this._IDDM;
			}
			set
			{
				if ((this._IDDM != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDMChanging(value);
					this.SendPropertyChanging();
					this._IDDM = value;
					this.SendPropertyChanged("IDDM");
					this.OnIDDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNCC", DbType="Int")]
		public System.Nullable<int> IDNCC
		{
			get
			{
				return this._IDNCC;
			}
			set
			{
				if ((this._IDNCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNCCChanging(value);
					this.SendPropertyChanging();
					this._IDNCC = value;
					this.SendPropertyChanged("IDNCC");
					this.OnIDNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Money")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(50)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONHANG", Storage="_CTDONHANGs", ThisKey="IDSP", OtherKey="IDSP")]
		public EntitySet<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this._CTDONHANGs;
			}
			set
			{
				this._CTDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_DANHMUC", ThisKey="IDDM", OtherKey="IDDM", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._IDDM = value.IDDM;
					}
					else
					{
						this._IDDM = default(Nullable<int>);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_NHACUNGCAP", ThisKey="IDNCC", OtherKey="IDNCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._IDNCC = value.IDNCC;
					}
					else
					{
						this._IDNCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THANHTOAN")]
	public partial class THANHTOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTHANHTOAN;
		
		private System.Nullable<int> _IDDH;
		
		private System.Nullable<decimal> _THANHTIEN;
		
		private string _HINHTHUCTT;
		
		private EntityRef<DONHANG> _DONHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTHANHTOANChanging(int value);
    partial void OnIDTHANHTOANChanged();
    partial void OnIDDHChanging(System.Nullable<int> value);
    partial void OnIDDHChanged();
    partial void OnTHANHTIENChanging(System.Nullable<decimal> value);
    partial void OnTHANHTIENChanged();
    partial void OnHINHTHUCTTChanging(string value);
    partial void OnHINHTHUCTTChanged();
    #endregion
		
		public THANHTOAN()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTHANHTOAN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTHANHTOAN
		{
			get
			{
				return this._IDTHANHTOAN;
			}
			set
			{
				if ((this._IDTHANHTOAN != value))
				{
					this.OnIDTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._IDTHANHTOAN = value;
					this.SendPropertyChanged("IDTHANHTOAN");
					this.OnIDTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDH", DbType="Int")]
		public System.Nullable<int> IDDH
		{
			get
			{
				return this._IDDH;
			}
			set
			{
				if ((this._IDDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDHChanging(value);
					this.SendPropertyChanging();
					this._IDDH = value;
					this.SendPropertyChanged("IDDH");
					this.OnIDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Money")]
		public System.Nullable<decimal> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHTHUCTT", DbType="NVarChar(100)")]
		public string HINHTHUCTT
		{
			get
			{
				return this._HINHTHUCTT;
			}
			set
			{
				if ((this._HINHTHUCTT != value))
				{
					this.OnHINHTHUCTTChanging(value);
					this.SendPropertyChanging();
					this._HINHTHUCTT = value;
					this.SendPropertyChanged("HINHTHUCTT");
					this.OnHINHTHUCTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_THANHTOAN", Storage="_DONHANG", ThisKey="IDDH", OtherKey="IDDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.THANHTOANs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.THANHTOANs.Add(this);
						this._IDDH = value.IDDH;
					}
					else
					{
						this._IDDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
